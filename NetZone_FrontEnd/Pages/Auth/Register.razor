@page "/register"
@using NetZone_FrontEnd.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3 class="mb-4">📝 Đăng ký tài khoản</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Họ tên:</label>
        <InputText class="form-control" @bind-Value="registerModel.FullName" placeholder="Nhập họ tên" />
    </div>

    <div class="mb-3">
        <label class="form-label">Email:</label>
        <InputText class="form-control" @bind-Value="registerModel.Email" placeholder="Nhập email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Địa chỉ:</label>
        <InputText class="form-control" @bind-Value="registerModel.Address" placeholder="Nhập địa chỉ" />
    </div>

    <div class="mb-3">
        <label class="form-label">Số điện thoại:</label>
        <InputText class="form-control" @bind-Value="registerModel.PhoneNumber" placeholder="Nhập số điện thoại" />
    </div>

    <div class="mb-3">
        <label class="form-label">Mật khẩu:</label>
        <InputText class="form-control" type="password" @bind-Value="registerModel.Password" placeholder="Nhập mật khẩu" />
    </div>

    <button type="submit" class="btn btn-success w-100">Đăng ký</button>
</EditForm>

<p class="mt-3 text-center">
    Đã có tài khoản? <a href="/login">Đăng nhập</a>
</p>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info alert-dismissible fade show mt-3" role="alert">
        @message
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@code {
    RegisterModel registerModel = new();
    string message = "";

    async Task HandleRegister()
    {
        var success = await AuthService.RegisterAsync(registerModel);
        message = success ? "✅ Đăng ký thành công!" : "❌ Đăng ký thất bại!";
        if (success) Navigation.NavigateTo("/login");
    }
}
